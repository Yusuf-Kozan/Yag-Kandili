@*
Copyright (C) 2022 Yusuf Kozan

---

Bu belge Yağ Kandili'nin bir parçasıdır.

Yağ Kandili bir özgür yazılımdır: GNU Affero Genel Kamu Lisansı'nın 3.
ya da (isteğinize göre) sonraki bir sürümünün Free Software Foundation
tarafından yayınlandığı durumunun koşulları altında Yağ Kandili'ni
dağıtabilir veya Yağ Kandili üzerinde değişiklik yapabilirsiniz.

Yağ Kandili kullanışlı olması umuduyla dağıtılmaktadır ancak HİÇBİR
GARANTİ VERMEMEKTEDİR, zımni PAZARLANABİLİRLİK veya BELİRLİ BİR
AMACA UYGUNLUK garantisi bile. Daha çok ayrıntı için GNU Affero
Genel Kamu Lisansı'na bakın.

Yağ Kandili'nin yanında GNU Affero Genel Kamu Lisansı'nın bir kopyasını
almış olmalısınız. Almadıysanız, <https://www.gnu.org/licenses/>
adresine bakın.

Yağ Kandili'nin lisansıyla ilgili daha çok bilgi için /Lisans
dizinine bakın.

---

This file is part of Yağ Kandili.

Yağ Kandili is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

Yağ Kandili is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with Yağ Kandili. If not, see <https://www.gnu.org/licenses/>.

For more information about the license of Yağ Kandili, see
/Lisans directory.
*@
@inject NavigationManager NavigationManager
@using System.Globalization
@using Esas
@namespace Bileşenler

@for (int i = 0; i < paylaşımlar.Length; i++)
{
    int tur = i;
    <div class="kutu_9900ff p-kutu-bileşen"
    style="text-align: start; overflow: hidden;">
        <a class="başlık_9900ff" style="display: block; text-align: start;"
        href="paylaşım/@(paylaşımlar[i].KİMLİK_2)">@(paylaşımlar[i].BAŞLIK)</a>

        <p style="white-space: pre-line; color: black;">@(paylaşımlar[i].İÇERİK)</p>

        <p style="white-space: pre-line; color: gray; font-size: medium;"
        >@(paylaşımlar[i].TARİH.ToString("dd.MM.yyyy HH.mm.ss"))</p>
        
        <div style="text-align: left; width: 50%; float: left;">
            <button class="düğme_0_120_0" style="font-size: large;"
            @onclick="() => ErişimeAç(paylaşımlar[tur].KİMLİK_2, tur)"
            >@(erişim_düğmesi[i])</button>
        </div>
        <div style="text-align: right; width: 50%; float: right;">
            @if (SilmeyeUygun(paylaşımlar[i].EKLENTİ))
            {
                <button class="düğme_000000" style="font-size: large;"
                @onclick="() => Sil(paylaşımlar[tur].KİMLİK_2, tur)"
                >@(silme_düğmesi[i])</button>
            }
        </div>
    </div>
}

@code {
    [Parameter]
    public string bakan {get; set;}

    //private string silme_düğmesi = "Paylaşımı Sil";
    private string[] silme_düğmesi;
    private short[] silme_sayacı;
    private void Sil(string kimlik2, int tur)
    {
        if (silme_sayacı[tur] == 0)
        {
            silme_düğmesi[tur] = "Evet, Gerçekten Sil";
            silme_sayacı[tur]++;
        }
        else if (silme_sayacı[tur] == 1)
        {
            Esas.KişiselVeriler.İşlemler.PaylaşımıSil(bakan, kimlik2);
            silme_sayacı[tur]--;
            silme_düğmesi[tur] = "Paylaşımı Sil";
            OnParametersSet();
        }
        else
        {
            silme_düğmesi[tur] = "Paylaşımı Sil";
            silme_sayacı[tur] = 0;
        }
    }

    private string[] erişim_düğmesi;
    private short[] erişim_sayacı;
    private void ErişimeAç(string kimlik2, int tur)
    {
        if (erişim_sayacı[tur] == 0)
        {
            erişim_düğmesi[tur] = "Evet, Gerçekten Aç";
            erişim_sayacı[tur]++;
        }
        else if (erişim_sayacı[tur] == 1)
        {
            Esas.KişiselVeriler.İşlemler.GizliPaylaşımıAç(bakan, kimlik2);
            erişim_sayacı[tur]--;
            erişim_düğmesi[tur] = "Erişime Aç";
            OnParametersSet();
        }
        else
        {
            erişim_düğmesi[tur] = "Erişime Aç";
            erişim_sayacı[tur] = 0;
        }
    }

    private bool SilmeyeUygun(string eklenti)
    {
        string[] ekler = eklenti.Split('>');
        CultureInfo TR = new CultureInfo("tr-TR");
        for (int i = 0;  i < ekler.Length; i++)
        {
            if(ekler[i].StartsWith("gizli"))
            {
                DateTime uygunluk_tarihi = DateTime.ParseExact(
                                        ekler[i].Split('/')[1],
                                        "yyyyMMddHHmmss",
                                        TR).AddDays(1);
                return (DateTime.Compare(DateTime.Now, uygunluk_tarihi) >= 0);
            }
        }
        return false;
    }


    private paylaşım[] paylaşımlar;
    protected override void OnParametersSet()
    {
        paylaşımlar = Esas.VeriTabanı.Paylaşım.KişininTümGizliPaylaşımları(bakan);
        erişim_düğmesi = new string[paylaşımlar.Length];
        erişim_sayacı = new short[paylaşımlar.Length];
        silme_düğmesi = new string[paylaşımlar.Length];
        silme_sayacı = new short[paylaşımlar.Length];
        for (int i = 0; i < paylaşımlar.Length; i++)
        {
            erişim_düğmesi[i] = "Erişime Aç";
            erişim_sayacı[i] = 0;
            silme_düğmesi[i] = "Paylaşımı Sil";
            silme_sayacı[i] = 0;
        }
    }
}