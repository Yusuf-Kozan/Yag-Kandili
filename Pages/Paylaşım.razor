@*
Copyright (C) 2022 Yusuf Kozan

---

Bu belge Yağ Kandili'nin bir parçasıdır.

Yağ Kandili bir özgür yazılımdır: GNU Affero Genel Kamu Lisansı'nın 3.
ya da (isteğinize göre) sonraki bir sürümünün Free Software Foundation
tarafından yayınlandığı durumunun koşulları altında Yağ Kandili'ni
dağıtabilir veya Yağ Kandili üzerinde değişiklik yapabilirsiniz.

Yağ Kandili kullanışlı olması umuduyla dağıtılmaktadır ancak HİÇBİR
GARANTİ VERMEMEKTEDİR, zımni PAZARLANABİLİRLİK veya BELİRLİ BİR
AMACA UYGUNLUK garantisi bile. Daha çok ayrıntı için GNU Affero
Genel Kamu Lisansı'na bakın.

Yağ Kandili'nin yanında GNU Affero Genel Kamu Lisansı'nın bir kopyasını
almış olmalısınız. Almadıysanız, <https://www.gnu.org/licenses/>
adresine bakın.

Yağ Kandili'nin lisansıyla ilgili daha çok bilgi için /Lisans
dizinine bakın.

---

This file is part of Yağ Kandili.

Yağ Kandili is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

Yağ Kandili is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with Yağ Kandili. If not, see <https://www.gnu.org/licenses/>.

For more information about the license of Yağ Kandili, see
/Lisans directory.
*@
@page "/paylaşım/{paylaşım_kimliği}"
@layout AnaTaslak
@using System.Threading.Tasks
@inject IJSRuntime JSruntime
@inject NavigationManager NavigationManager
@namespace sayfa

@if (göster)
{
    <div class="p-genel p-sayfa">
        <div style="text-align: center;">
            <YönlendirenBaşlık şuraya_yönlendir="/ana" ilk_başlık=@(paylaşım.BAŞLIK)
            ilk_renk="#000000" ikinci_başlık="Ana Sayfaya Dön" ikinci_renk="#ff6600"/>
        </div>
        <p style="white-space: pre-line; color: black;">@(paylaşım.İÇERİK)</p>

        <p style="white-space: pre-line; color: gray; font-size: medium;"
        >@(paylaşım.TARİH.ToString("dd.MM.yyyy HH.mm.ss"))</p>
        <a style="font-size: large;" href="/kişi/@paylaşan.KULLANICI_ADI"
        >@(paylaşan.KULLANICI_ADI)</a>

        <div style="text-align: center;">
            <Değerlendir değerlendiren=@bakan.KİMLİK değerlendirilen=@paylaşım_kimliği/>
        </div>

        <div style="color:black;">
            <p style="font-size: larger; font-weight: bold; page-break-before: always;"
            >Yorumlar ve Söyleşi</p>
                
            <input type="text" placeholder="Yorum Yaz..." class="kutu_808080" @bind="yorum_içeriği"
            style="width: calc(100% - 9px); font-size: large; color: black; margin: 0.5%;"/>
            <button class="düğme_808080" style="font-size: large; width: 100%; margin: 0.5%;"
            @onclick="Yorumla">Yorumla</button>
                
            <BirincilYorumlar gösterilecek_sözler=@Esas.VeriTabanı.Söyleşi.Yorumlar(paylaşım.KİMLİK_2)/>
        </div>

        <div class="sayfanın_altı">
            <div class="uyarı" style=@uyarı_görünümü
            @onclick="UyarıyıKapat">@uyarı_yazısı</div>
        </div>
    </div>
}
else
{
    <h1 class="Yükleniyor">Yükleniyor</h1>
}

@code {
    [Parameter]
    public string paylaşım_kimliği {get; set;}
    private Esas.Paylaşım paylaşım;
    private parolasız_üye paylaşan;
    private parolasız_üye bakan;
    
    private string yorum_içeriği;
    private void Yorumla()
    {
        if (!String.IsNullOrWhiteSpace(yorum_içeriği))
        {
            UyarıyıKapat();
            İşlemler.Yorumİşlemleri.YorumYap(bakan.KİMLİK, paylaşım.KİMLİK_2, yorum_içeriği,
                                    DateTime.Now, oturum);
            yorum_içeriği = null;
        }
        else
        {
            UyarıYap("Boş yorum yapamazsınız.");
        }
    }

    private string uyarı_görünümü = "display: none;";
    private string uyarı_yazısı;
    private void UyarıYap(string yazı)
    {
        uyarı_yazısı = yazı;
        uyarı_görünümü = "display: block;";
    }
    private void UyarıyıKapat()
    {
        uyarı_yazısı = null;
        uyarı_görünümü = "display: none;";
    }


    private string kullanıcı, oturum;
    private bool oturum_açık;
    private bool göster = false;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            var a = await JSruntime.InvokeAsync<string>("Çerezİşleri.ÇerezOku", "KULLANICI");
            kullanıcı = a.ToString(); a = null;
            var b = await JSruntime.InvokeAsync<string>("Çerezİşleri.ÇerezOku", "OTURUM");
            oturum = b.ToString(); b = null;
            devam(kullanıcı, oturum);
            StateHasChanged();
        }
        catch
        {
            NavigationManager.NavigateTo("/");
        }
    }
    private void devam(string kullanıcı_kimliği, string oturum_kimliği)
    {
        oturum_açık = Esas.VeriTabanı.Oturum.BuOturumAçık(oturum_kimliği, kullanıcı_kimliği);
        if (!oturum_açık)
        {
            NavigationManager.NavigateTo("/");
        }
        bakan = Esas.VeriTabanı.Üyelik.ParolasızÜyeBilgileri(kullanıcı_kimliği);
        paylaşım = Esas.VeriTabanı.Paylaşım.TekPaylaşım(paylaşım_kimliği);
        bool paylaşım_gizli = paylaşım.EKLENTİ.Contains(">gizli");
        paylaşan = Esas.VeriTabanı.Üyelik.ParolasızÜyeBilgileri(paylaşım.PAYLAŞAN);
        if (paylaşım_gizli && (bakan.KİMLİK != paylaşan.KİMLİK))
        {
            NavigationManager.NavigateTo("/ana");
        }
        göster = true;
    }
}