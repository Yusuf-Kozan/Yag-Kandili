@page "/paylaşım/{paylaşım_kimliği}"
@layout AnaTaslak
@using System.Threading.Tasks
@using Esas
@using Kilnevüg
@using Bileşenler
@inject IJSRuntime JSruntime
@inject NavigationManager NavigationManager
@namespace sayfa


    @if (oturum_açık)
    {
        <div class="p-genel p-sayfa" style="font-family: sans-serif;">
            <button class="p-başlık" style="@başlık_görünüşü" @onclick="Geri_Dön">@başlık_metni</button><br/>
            <p style="text-align: justify; white-space: pre-line; color: black;">@(esas_paylaşım.İÇERİK)</p>

            <div style="text-align: center;">
                <Değerlendir değerlendiren=@bakan_kullanıcı.KİMLİK değerlendirilen=@paylaşım_kimliği
                oturum=@oturum_kimliği/>
            </div>

            <div style="color:black; text-align: start;">
                <p style="font-size: larger; font-weight: bold; page-break-before: always;">Yorumlar ve Söyleşi</p>
                <input type="text" placeholder="Yorum Yaz..." class="MetinKutusu1g"
                    style="width: 80%; font-size: large; color: black;" @bind="yorum_içeriği"/>
                <button class="D1ykG" style="font-size: large; border-width: 2px;" @onclick="Yorumla">Yorumla</button>

                <BirincilYorumlar gösterilecek_sözler=@Esas.VeriTabanı.Söyleşi.Yorumlar(esas_paylaşım.KİMLİK_2) />
            </div>
        </div>
    }
    else
    {
        <h1>Oturum açık değil</h1>
    }



@code {
    [Parameter]
    public string paylaşım_kimliği {get; set;}
    private Esas.Paylaşım esas_paylaşım {get; set;}
    private string başlık_görünüşü = "color: black;";
    private string başlık_metni {get; set;}
    private int dönüş_sayacı = 0;
    private void Geri_Dön()
    {
        if (dönüş_sayacı == 0)
        {
            başlık_görünüşü = "color: #ff6600;";
            dönüş_sayacı++;
        }
        else if (dönüş_sayacı == 1)
        {
            başlık_görünüşü = "color: black;";
            NavigationManager.NavigateTo($"/ana#{esas_paylaşım.KİMLİK_2}");
            dönüş_sayacı--;
        }
        else
        {
            dönüş_sayacı = 0;
        }
    }
    private string yorum_içeriği;
    private void Yorumla()
    {
        İşlemler.Yorumİşlemleri.YorumYap(bakan_kullanıcı.KİMLİK, esas_paylaşım.KİMLİK_2, yorum_içeriği,
                                DateTime.Now, oturum_kimliği);
        yorum_içeriği = null;
    }


    private string a, b; //a == kullanıcı adı && b == kilmik
    private bool oturum_açık;
    public static ÜyeBil bakan_kullanıcı {get; set;}
    public static string oturum_kimliği {get; private set;}
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            var c = await JSruntime.InvokeAsync<string>("Çerezİşleri.ÇerezOku", "kullanıcı");
            a = c.ToString(); c = null;
            var d = await JSruntime.InvokeAsync<string>("Çerezİşleri.ÇerezOku", "oturum");
            b = d.ToString(); d = null;
            devam(a, b);
            StateHasChanged();
        }
        catch
        {
            NavigationManager.NavigateTo("/");
        }
    }
    private void devam(string kullanıcı_kimliği, string oturum_kimliği)
    {
        oturum_açık = Esas.VeriTabanı.Oturum.BuOturumAçık(oturum_kimliği, kullanıcı_kimliği);
        if (!oturum_açık)
        {
            NavigationManager.NavigateTo("/");
        }
        bakan_kullanıcı = Esas.VeriTabanı.Üyelik.ÜyeBilgileri(kullanıcı_kimliği);
        Paylaşım.oturum_kimliği = oturum_kimliği;
        esas_paylaşım = Esas.VeriTabanı.Paylaşım.TekPaylaşım(paylaşım_kimliği);
        
        if (dönüş_sayacı == 1)
        {
            başlık_metni = "Ana Sayfaya Dön";
        }
        else
        {
            başlık_metni = esas_paylaşım.BAŞLIK;
        }
    }
}